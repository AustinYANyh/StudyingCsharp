<Window x:Class="testLineAttritube.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" 
        xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
        xmlns:local="clr-namespace:testLineAttritube"
        mc:Ignorable="d" Loaded="Window_Loaded"
        Title="MainWindow" Height="768" Width="1024" WindowStyle="None" ResizeMode="NoResize">
    <Window.Resources>
        <local:LocationConverter x:Key="LocationConverter"></local:LocationConverter>
        <Style x:Key="ProgressBarStyle1" TargetType="{x:Type ProgressBar}">
            <Setter Property="Maximum" Value="100" />
            <Setter Property="Height" Value="70" />
            <Setter Property="Value" Value="20" />
            <Setter Property="Foreground" Value="#40a2c2"/>
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ProgressBar}">
                        <Grid x:Name="TemplateRoot">
                            <Grid.RowDefinitions>
                                <RowDefinition></RowDefinition>
                                <RowDefinition Height="30"></RowDefinition>
                            </Grid.RowDefinitions>
                            <Grid Grid.Row="0" Height="40">
                                <Canvas x:Name="PicAndText">
                                    <Canvas x:Name="tip" Canvas.Left="{Binding ElementName=PART_Indicator,Path=ActualWidth,Converter={StaticResource LocationConverter}}">
                                        <Rectangle Width="40" Height="40" Fill="{StaticResource ProcessBarMessageBox}"></Rectangle>
                                        <TextBlock Text="{Binding RelativeSource={RelativeSource AncestorType=ProgressBar},Path=Value}" Foreground="Black" FontSize="15" Canvas.Left="10" Canvas.Top="5"></TextBlock>
                                    </Canvas>
                                </Canvas>
                            </Grid>
                            <Grid Grid.Row="1">
                                <Path x:Name="PART_Track"  Stroke="Black" StrokeThickness="1" Data="M18,0 L18,0 137,0 M137,0 A2.5,2.5 0 0 1 130,30 L13,30 A1,1 0 0 1 18,0z">
                                    <Path.Fill>
                                        <SolidColorBrush Color="Black" Opacity="0.23137254901960785"/>
                                    </Path.Fill>
                                </Path>
                                <Border x:Name="PART_Indicator" BorderBrush="Transparent" MaxWidth="145" Height="25" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="2,3,0,0" CornerRadius="13,13,13,13" Background="{TemplateBinding Foreground}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Grid>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ProgressBarStyle2" TargetType="{x:Type ProgressBar}">
            <Setter Property="Maximum" Value="100" />
            <Setter Property="Height" Value="10" />
            <Setter Property="Value" Value="10" />
            <Setter Property="Foreground" Value="#40a2c2"/>
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ProgressBar}">
                        <Grid x:Name="TemplateRoot">
                            <Path x:Name="PART_Track" Stroke="Black" StrokeThickness="1" Data="M6.500,0.500 L91.500,0.500 C98.873,0.500 97.421,10.500 91.500,10.500 L6.500,10.500 C0.079,10.943 -2.443,1.118 6.500,0.500 Z" HorizontalAlignment="Left" VerticalAlignment="Center">
                                <Path.Fill>
                                    <SolidColorBrush Color="Black" Opacity="0.23137254901960785"/>
                                </Path.Fill>
                            </Path>
                            <Border x:Name="PART_Indicator" CornerRadius="5" BorderBrush="Transparent" MaxWidth="93" Height="8" Background="{TemplateBinding Foreground}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="2,0,0,0"></Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="TitleButtonStyle" TargetType="{x:Type local:TitleButton}">
            <Setter Property="Width" Value="25"></Setter>
            <Setter Property="Height" Value="25"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type local:TitleButton}">
                        <Grid>
                            <Ellipse x:Name="btn" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" 
                                 Fill="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=NormalBackground}"></Ellipse>
                            <Rectangle x:Name="icon" Width="18" Height="18" Fill="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=NormalBackground}"></Rectangle>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="icon" Property="Fill" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=NormalIcon}"></Setter>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="False">
                                <Setter TargetName="icon" Property="Fill" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=NormalBackground}"></Setter>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="btn" Property="Fill" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=PressBackground}"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="TextBox.Static.Border" Color="#FFABAdB3"/>
        <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#FF7EB4EA"/>
        <SolidColorBrush x:Key="TextBox.Focus.Border" Color="#FF569DE5"/>
        <Style x:Key="TextBoxStyle1" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
            <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                        <Condition Property="IsSelectionActive" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="40"/>
            <RowDefinition Height="20"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid Grid.Row="0" x:Name="title" Background="#909090">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"></ColumnDefinition>
                <ColumnDefinition Width="105"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <Grid Grid.Column="0">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="PreviewMouseLeftButtonDown">
                        <i:InvokeCommandAction Command="{Binding DragMoveCommand}"></i:InvokeCommandAction>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <Rectangle  Fill="Transparent"></Rectangle>
                <Rectangle Fill="{StaticResource Logo2}" Width="245" Height="30" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="15,0,0,0"></Rectangle>
            </Grid>
            <StackPanel Grid.Column="1" Orientation="Horizontal" Margin="0,0,5,0">
                <local:TitleButton x:Name="MinimalBtn" Width="25" Height="25" Margin="5" Style="{StaticResource TitleButtonStyle}" NormalBackground="#FF05F310" PressBackground="Red" NormalIcon="{StaticResource Minimal}" Command="{Binding MinimalCommand}"/>
                <local:TitleButton x:Name="MaxmalBtn" Width="25" Height="25" Margin="5" Style="{StaticResource TitleButtonStyle}" NormalBackground="yellow" PressBackground="Red" NormalIcon="{StaticResource Maxmal}" Command="{Binding MaxmalCommand}"/>
                <local:TitleButton x:Name="CloseBtn" Width="25" Height="25" Margin="5" Style="{StaticResource TitleButtonStyle}" NormalBackground="red" PressBackground="Red" NormalIcon="{StaticResource Close}" Command="{Binding CloseWindowCommand}"/>
            </StackPanel>
        </Grid>
        <Grid Grid.Row="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="35"/>
            </Grid.RowDefinitions>
            <Grid Grid.Row="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="200"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Grid Grid.Column="1">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="30"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="30"/>
                        <RowDefinition Height="150"/>
                    </Grid.RowDefinitions>
                    <Grid Grid.Row="0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="8*"></ColumnDefinition>
                            <ColumnDefinition Width="*"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <local:AutoCompleteTextBox  x:Name="OrderInput" Grid.Column="0" HorizontalAlignment="Stretch"></local:AutoCompleteTextBox>
                        <!--<Button Width="80" Content="Excute" FontSize="18" HorizontalAlignment="Right"></Button>-->
                        <Button Grid.Column="1" Width="80" FontSize="18" Content="Ecxute" Foreground="#000000" HorizontalAlignment="Right" Click="Button_Click_1">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="PreviewMouseDown">
                                    <i:InvokeCommandAction Command="{Binding ccc}"></i:InvokeCommandAction>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </Button>
                    </Grid>
                    <Grid Grid.Row="1">
                        <RichTextBox x:Name="OrderShow" HorizontalAlignment="Stretch" VerticalContentAlignment="Stretch" FontSize="18" Foreground="#000000" IsReadOnly="True" Margin="0,5,0,0">
                            <FlowDocument>
                                <Paragraph>
                                    <Run Text="请在上方命令行输入命令,按'Excute'执行!"></Run>
                                </Paragraph>
                                <Paragraph>
                                    <Run Text="你在开玩笑吗"></Run>
                                </Paragraph>
                                <Paragraph>
                                    <Run Text="G00 x100 y100
G00 x0 y0
G00 x100 y100
G00 x0 y0
G00 x100 y100
G00 x0 y0
G00 x100 y100
G00 x0 y0"></Run>
                                </Paragraph>
                            </FlowDocument>
                        </RichTextBox>
                    </Grid>
                    <Grid Grid.Row="3">

                    </Grid>
                </Grid>
            </Grid>
        </Grid>
    </Grid>
</Window>
